<article index="true">
    <topic>
        <title>Sorter</title>
        <p>
            A sorter is an instance of interface <b>list::IDataSorter</b>.
        </p>
        <p>
            When a sorter is installed to the data grid,
            <b>SetCallback</b> will be called.
            <b>GetItemProvider</b> in the callback object provides access to the <b>ItemProvider</b> of the data grid.
            <b>OnProcessorChanged</b> in the callback object is called by the sorter,
            when the sorter definition is changed.
        </p>
        <p>
            The <b>Compare</b> function accepts two items in <b>ItemSource</b>.
            It returns a negative number when <b>rows1</b> should appear before <b>rows2</b> in ascending order.
            It returns a positive number when <b>rows1</b> should appear after <b>rows2</b> in ascending order.
            It returns 0 when the order is not important.
        </p>
        <topic>
            <title>Implementing a Sorter</title>
            <p>
                Typically you need to implement the interface directly.
            </p>
        </topic>
        <topic>
            <title>Predefined Sorter Combinators</title>
            <p>
                <b>list::DataMultipleSorter</b>:
                Combine two sorters into one sorter.
                If the <b>LeftSorter</b> decides an order for two items,
                that's the order.
                If the <b>LeftSorter</b> decides that the order is not important,
                the <b>RightSorter</b> kicks in.
            </p>
            <p>
                <b>list::DataReverseSorter</b>:
                This sorter defines a revert order based on another sorter.
            </p>
        </topic>
        <topic>
            <title>Installing Sorters</title>
            <p>
                Multiple sorters could be assigned to each columns,
                but only one sorter could be activated.
                To activate or cancel a sorter,
                just click the column header,
                or request the <b>list::IDataGridView</b> view from the <b>ItemProvider</b>
                and there will be methods for controlling sorting.
            </p>
        </topic>
    </topic>
</article>