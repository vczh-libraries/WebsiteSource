<article>
    <topic>
        <title>&lt;LocalizedStrings&gt;</title>
        <p>
            After a <b>GacUI XML Resource</b> is converted to a resource binary:
            <ul>
                <li>This resource does not exist in the resource binary.</li>
                <li>The equivalent Workflow script will be included in the Workflow assembly part in the resource binary.</li>
                <li>
                    If you use the one specified in <b>GacGenConfig/Cpp</b>,
                    the Workflow assembly is also not included in the resource binary,
                    because you are supposed to use the generated C++ code.
                </li>
            </ul>
        </p>
        <p>
            &lt;LocalizedStrings/&gt; generate a class with a local property and methods returning text.
            By using data binding to bind these text to UI,
            changing the locale will also change texts in UI.
        </p>
        <p>
            <a href="https://github.com/vczh-libraries/Release/blob/master/SampleForDoc/GacUI/XmlRes/kb_localizedstrings/Resource.xml">Here</a>
            is a sample for &lt;LocalizedStrings/&gt;.
            In this same, there is a &lt;LocalizedStrings/&gt; like this:
            <program><code><![CDATA[
                <LocalizedStrings name="StringResource">
                  <LocalizedStrings ref.Class="sample::StringResource" DefaultLocale="en-US">
                    <Strings Locales="en-US">
                      <String Name="Date" Text="Date: $(0:LongDate)"/>
                      <String Name="Week" Text=", $(0:Date:dddd)"/>
                      <String Name="Time" Text="Time: $(0:LongTime)"/>
                      <String Name="Message" Text="Good morning, $(0)!"/>
                      <String Name="Title" Text="Localization"/>
                      <String Name="SelectLocal" Text="Selected Locale:"/>
                      <String Name="SelectName" Text="Enter Your Name:"/>
                      <String Name="OK" Text="OK"/>
                      <String Name="Cancel" Text="Cancel"/>
                    </Strings>
                    
                    <Strings Locales="zh-CN">
                      <String Name="Date" Text="日期：$(0:LongDate)"/>
                      <String Name="Week" Text="，$(0:Date:dddd)"/>
                      <String Name="Time" Text="时间：$(0:LongTime)"/>
                      <String Name="Message" Text="早上好，$(0)！"/>
                      <String Name="Title" Text="本地化"/>
                      <String Name="SelectLocal" Text="语言设置："/>
                      <String Name="SelectName" Text="输入名字："/>
                      <String Name="OK" Text="确定"/>
                      <String Name="Cancel" Text="取消"/>
                    </Strings>
                    
                    <Strings Locales="ja-JP">
                      <String Name="Date" Text="日付：$(0:LongDate)"/>
                      <String Name="Week" Text=" $(0:Date:dddd)"/>
                      <String Name="Time" Text="時刻：$(0:LongTime)"/>
                      <String Name="Message" Text="おはようございます，$(0)さん！"/>
                      <String Name="Title" Text="ローカライゼーション"/>
                      <String Name="SelectLocal" Text="選択したロケール："/>
                      <String Name="SelectName" Text="名前を入力してください："/>
                      <String Name="OK" Text="OK"/>
                      <String Name="Cancel" Text="キャンセル"/>
                    </Strings>
                  </LocalizedStrings>
                </LocalizedStrings>
            ]]></code></program>
        </p>
        <p>
            There are two attributes for &lt;LocalizedStrings/&gt;:
            <ul>
                <li><b>ref.Class</b>: The class name. This is used in &lt;ref.LocalizedStrings/&gt; in &lt;Instance/&gt;.</li>
                <li><b>DefaultLocale</b> The default locale name. If the translation for a locale does not exist, it uses the <b>DefaultLocale</b>.</li>
            </ul>
        </p>
        <p>
            In any &lt;String/&gt;,
            <b>Name</b> is the method name of this text item,
            <b>Text</b> is the content.
            Content consists of the following items:
            <ul>
                <li>Normal text.</li>
                <li><b>$($)</b>, which is the $ character.</li>
                <li><b>$(ARGUMENT-INDEX)</b>: A string parameter. Parameters are zero-based.</li>
                <li><b>$(ARGUMENT-INDEX:TYPE)</b>: A typed parameter.</li>
                <li><b>$(ARGUMENT-INDEX:TYPE:FORMAT)</b>: A typed parameter with specified format.</li>
            </ul>
            Type must be one of the following:
            <ul>
                <li>ShortDate</li>
                <li>LongDate</li>
                <li>YearMonthData</li>
                <li>ShortTime</li>
                <li>LongTime</li>
                <li>Date</li>
                <li>Time</li>
                <li>Number</li>
                <li>Currency</li>
            </ul>
            If the type is <b>Date</b> or <b>Time</b>,
            the format must be compatible to <a href="/vlppos/ref/VL__LOCALE__FORMATTIME@__VL__WSTRING(__VL__WSTRING_CONST_&amp;,___VL.html">Locale::FormatTime</a>.
        </p>
        <p>
            There are three attributes for &lt;ref.LocalizedStrings/&gt; in &lt;Instance/&gt;:
            <ul>
                <li><b>Name</b>: The property name of this string resource. This property is added to the instance, and it could be <b>null</b>.</li>
                <li><b>Class</b>: <b>ref.Class</b> in the &lt;LocalizedStrings/&gt;.</li>
                <li><b>Default</b>: <b>true</b> or <b>false</b>. Only one string resource could be default.</li>
            </ul>
        </p>
        <p>
            After the configuration is ready,
            a text item could be accessed in one of the following ways:
            <ul>
                <li><b>Property-str="METHOD(ARGUMENT, ...)"</b></li>
                <li><b>Property-str="NAME.METHOD(ARGUMENT, ...)"</b></li>
                <li><b>self.NAME.METHOD(ARGUMENT, ...)</b>, note that <b>self.NAME</b> could be <b>null</b>, the <b>??</b> operator is recommended.</li>
            </ul>
        </p>
        <p>
            <b>NAME</b> must be the name of one of the  &lt;ref.LocalizedStrings/&gt;.
            If it is not specified,
            the default one kicks in.
        </p>
        <p>
            <b>METHOD</b> must be one of the text item name in the string resource.
        </p>
        <p>
            <b>ARGUMENTS</b> could be any valid Workflow expression that is a string or can be implicitly converted to a string.
        </p>
        <p>
            When the UI is created,
            the locale is set to <b>Application::GetApplication().Locale</b>,
            which is the default locale in the OS.
            To change the locale of the UI,
            just change <b>Application::GetApplication().Locale</b>,
            and all string resources will be updated if it is used in <b>-str</b>, <b>-format</b> or <b>-bind</b>.
        </p>
        <p>
            Here is how they looks like:
        </p>
        <p>
            <img src="/gacui/kb_localizedstrings.gif"/>
        </p>
    </topic>
</article>