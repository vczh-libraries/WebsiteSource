<article index="true">
    <topic>
        <title>Expressions</title>
        <p>
            All supported expressions are listed below.
        </p>
        <topic>
            <title>null, true, false</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>1024, 10.24</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>"string"</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>$"formatted string"</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Unary operator expression: op VALUE</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Binary operator expression: VALUE op VALUE</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>If expression: CONDITION ? VALUE : VALUE</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Try expression: VALUE ?? DEFAULT</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Assignment expression: VALUE = VALUE</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Ordered lambda expression: [$1 + 1]</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Lambda expression: func(x: int): int{ return x + 1; }</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Let expression: let x = 1 in (x + 1)</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Range expression: range (1, 10)</title>
            <p>
                See <b>Collection types</b> in <a href="/workflow/lang/type.html">Types</a>.
            </p>
        </topic>
        <topic>
            <title>Constructor expression: {a b c}, {a:x b:y c:z}</title>
            <p>
                See <b>Collection types</b> in <a href="/workflow/lang/type.html">Types</a>.
            </p>
            <p>
                See <b>Allocating a struct</b> in <a href="/workflow/lang/struct.html">Structs</a>.
            </p>
        </topic>
        <topic>
            <title>New class expression: new TYPE(ARGUMENTS)</title>
            <p>
                See <a href="/workflow/lang/class_new.html">Allocating (class)</a>.
            </p>
        </topic>
        <topic>
            <title>New interface expression: new TYPE{ MEMBERS }</title>
            <p>
                See <a href="/workflow/lang/interface_new.html">Implementing (interface)</a>.
            </p>
        </topic>
        <topic>
            <title>Mixin new interface expression: new TYPE(using OBJECT)</title>
            <p>
                See <a href="/workflow/lang/interface_using.html">Generic (interface)</a>.
            </p>
        </topic>
        <topic>
            <title>Call expression: FUNCTION(ARGUMENTS)</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Instance member accessing: OBJECT.MEMBER</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Static member accessing: OBJECT::MEMBER, ::MEMBER</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Index expression: CONTAINER[KEY]</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Null testing expression: OBJECT is null, OBJECT is not null</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Strong casting expression: cast TYPE OBJECT, cast * OBJECT</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Weak casting expression: OBJECT as TYPE, OBJECT as *</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Infer expression: OBJECT of TYPE</title>
            <p>
                This section is under construction.
            </p>
        </topic>
        <topic>
            <title>Event expression: attach(EVENT, FUNCTION), detach(EVENT, HANDLER)</title>
            <p>
                See <b>Using events</b> in <a href="/workflow/lang/interface_prop.html">Properties and Events (interface)</a>.
            </p>
            <p>
                See <b>Using events</b> in <a href="/workflow/lang/class_prop.html">Properties and Events (class)</a>.
            </p>
        </topic>
        <topic>
            <title>Binding expression: bind(EXPR)</title>
            <p>
                See <a href="/workflow/lang/bind.html">Data Bindings</a>.
            </p>
        </topic>
        <topic>
            <title>Coroutine-awared expression: $coroutine{ ... }, $.NAME</title>
            <p>
                See <a href="/workflow/lang/coroutine.html">Coroutines</a>.
            </p>
        </topic>
    </topic>
</article>