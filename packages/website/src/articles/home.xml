<article index="true">
    <topic>
        <title>Welcome to Gaclib!</title>
        <p>
            Gaclib is a GPU accelerated C++ User Interface library.
            You can find it at <a href="https://github.com/vczh-libraries/Release">github</a>.
            This library provide many useful features.
            If you don't need all features,
            you can just use a subset of released C++ files to reduce the size of the executable.
        </p>
        <p>
            More and more developers are using this library to create their applications!
            You could check out <a href="http://www.majorav.com">majorav.com</a>,
            which is a very impressive example.
            Scroll to the end to see screenshots!
        </p>
        <topic>
            <title>Data processing</title>
            <topic>
                <title>Containers</title>
                <p>
                    <program language="C++"><code><![CDATA[
Group<vint, WString> xs;
xs.Add(1, L"C++");
xs.Add(1, L"C#");
xs.Add(1, L"TypeScript");
xs.Add(2, L"Java");
const List<WString>& ones = xs.Get[1];
                    ]]></code></program>
                </p>
            </topic>
            <topic>
                <title>Rich collection operations</title>
                <p>
                    <program language="C++"><code><![CDATA[
vint numbers[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
vint sumOfSquares = From(numbers)
    .Select([](vint i) { return i * i; })
    .Aggregate([](vint a, vint b) { return a + b; });
                    ]]></code></program>
                </p>
            </topic>
            <topic>
                <title>Files and streams</title>
                <p>
                    <program language="C++"><code><![CDATA[
Folder folder(L"C:/MyProjects/");
List<File> files;
folder.GetFiles(files);

WString fileNames = GenerateToStream([&](const TextWriter& writer)
{
    FOREACH(File, file, files)
    {
        writer.WriteLine(file.GetFilePath().GetName());
    }
});
File(L"C:/MyProjects/index.txt")
    .WriteAllText(fileNames, false, BomEncoder::Utf8);
                    ]]></code></program>
                </p>
            </topic>
            <topic>
                <title>Http client</title>
                <p>
                    <program language="C++"><code><![CDATA[
HttpRequest request;
request.SetHost(L"http://gaclib.net");

HttpResponse response;
HttpQuery(request, response);

Console::WriteLine(itow(response.statusCode));
Console::WriteLine(response.GetBodyUtf8());
                    ]]></code></program>
                </p>
            </topic>
            <topic>
                <title>Threading and synchronozation</title>
                <p>
                    <program language="C++"><code><![CDATA[
EventObject event;
event.CreateAutoUnsignal(false);

Thread::CreateAndStart([&]()
{
    DoSomething();
    event.Signal();
});

event.Wait();
                    ]]></code></program>
                </p>
            </topic>
        </topic>
        <topic>
            <title>String processing</title>
            <topic>
                <title>Regular expression</title>
                <p>
                    <program language="C++"><code><![CDATA[
// something
                    ]]></code></program>
                </p>
            </topic>
            <topic>
                <title>GLR parser generation</title>
                <p>
                    <program language="C++"><code><![CDATA[
// something
                    ]]></code></program>
                </p>
            </topic>
        </topic>
        <topic>
            <title>C++ reflection</title>
            <topic>
                <title>Easy registration</title>
                <p>
                    <program language="C++"><code><![CDATA[
// something
                    ]]></code></program>
                </p>
            </topic>
            <topic>
                <title>Dynamic invoking</title>
                <p>
                    <program language="C++"><code><![CDATA[
// something
                    ]]></code></program>
                </p>
            </topic>
        </topic>
        <topic>
            <title>Scripting with native code</title>
            <topic>
                <title>Easy syntax</title>
                <p>
                    <program language="C++"><code><![CDATA[
// something
                    ]]></code></program>
                </p>
            </topic>
            <topic>
                <title>Native code interoperability</title>
                <p>
                    <program language="C++"><code><![CDATA[
// something
                    ]]></code></program>
                </p>
            </topic>
            <topic>
                <title>C++ code generation</title>
                <p>
                    <program language="C++"><code><![CDATA[
// something
                    ]]></code></program>
                </p>
            </topic>
        </topic>
        <topic>
            <title>... and GacUI!</title>
        </topic>
    </topic>
</article>