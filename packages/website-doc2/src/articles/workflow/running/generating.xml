<article>
    <topic>
        <title>Generating C++ Code</title>
        <p>
            Involved files:
            <ul>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_Lib/W05_Lib.h">W05_Lib/W05_Lib.h</a></li>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_Lib/W05_Lib.cpp">W05_Lib/W05_Lib.cpp</a></li>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_Compile/Main.cpp">W05_Compile/Main.cpp</a></li>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_StaticRun/Main.cpp">W05_StaticRun/Main.cpp</a></li>
            </ul>
            Generated files:
            <ul>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_StaticRun/Generated/W05ScriptIncludes.h">W05_StaticRun/Generated/W05ScriptIncludes.h</a></li>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_StaticRun/Generated/W05Script.h">W05_StaticRun/Generated/W05Script.h</a></li>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_StaticRun/Generated/W05Script.cpp">W05_StaticRun/Generated/W05Script.cpp</a></li>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_StaticRun/Generated/W05ScriptReflection.h">W05_StaticRun/Generated/W05ScriptReflection.h</a></li>
                <li><a href="https://github.com/vczh-libraries/Release/blob/master/Tutorial/Console_Workflow/W05_StaticRun/Generated/W05ScriptReflection.cpp">W05_StaticRun/Generated/W05ScriptReflection.cpp</a></li>
            </ul>
        </p>
        <p>
            Workflow script can be converted to C++ and save to files.
            If you don't want reflection,
            you still need to link <b>VlppReflection.cpp</b>,
            but by adding <b>VCZH_DEBUG_NO_REFLECTION</b> to the precompile definitions list,
            many reflection related code are removed in C++ files.
        </p>
        <p>
            In this case,
            you can either link or not link to <b>W05ScriptReflection.cpp</b>.
            When <b>VCZH_DEBUG_NO_REFLECTION</b> is on,
            you get an empty <b>LoadW05ScriptTypes</b> function.
            This helps you to write code that can be compiled regardless whether <b>VCZH_DEBUG_NO_REFLECTION</b> is on or off.
        </p>
        <p>
            <b>W05_Lib/W05_Lib.h</b> and <b>W05_Lib/W05_Lib.cpp</b> is a good example.
            When <b>VCZH_DEBUG_NO_REFLECTION</b> is on,
            reflection related codes are removed.
            This makes them be able to use in both <b>W05_DynamicRun</b> and <b>W05_StaticRun</b>.
        </p>
        <p>
            You need the semantic analyzing result in order to generate C++ code,
            so the compiling code is slightly different.
            After you get the assembly,
            you can use <b>WfCppInput</b> class and <b>GenerateCppFiles</b> function to translate Workflow to C++.
            <program><code><![CDATA[
                auto cppInput = MakePtr<WfCppInput>(L"W05Script");
                cppInput->comment = L"THIS FILE IS GENERATED BY W05_COMPILE";
                cppInput->headerGuardPrefix = L"W05_SCRIPT_";
                cppInput->normalIncludes.Add(L"../../W05_Lib/W05_Lib.h");
                cppInput->normalIncludes.Add(L"VlppWorkflowLibrary.h");

                auto cppOutput = GenerateCppFiles(cppInput, &manager);
            ]]></code></program>
            All configuration is necessary.
        </p>
        <p>
            After calling <b>GenerateCppFiles</b>, you can a <b>WfCppOutput</b> object, containing C++ codes.
            You need to write them to files manually.
            <program><code><![CDATA[
                for (vint i = 0; i < cppOutput->cppFiles.Count(); i++)
                {
                    auto key = cppOutput->cppFiles.Keys()[i];
                    auto value = cppOutput->cppFiles.Values()[i];
                    Console::WriteLine(L"    " + key);
                    File(cppFolder / key).WriteAllText(value, false, BomEncoder::Utf8);
                }
            ]]></code></program>
        </p>
        <p>
            Then you get all generated files!
            All Workflow classes now become C++ classes:
            <program><code><![CDATA[
                #include "Generated/W05ScriptIncludes.h"

                using namespace myscript;

                int main()
                {
                    // VCZH_DEBUG_NO_REFLECTION is on
                    // so we don't need, and are not allowed, to start reflection
                    auto myapp = MakePtr<MyApp>();
                    myapp->CreateScripting()->Execute(L"Gaclib");

                    // we need to call this because we use generated code from Workflow script
                    FinalizeGlobalStorage();
                }
            ]]></code></program>
        </p>
    </topic>
</article>