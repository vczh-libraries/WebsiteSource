<article index="true">
    <topic>
        <title>Properties and Events (class)</title>
        <p>
            Properties and events are allowed in classes.
        </p>
        <topic>
            <title>Defining properties and events</title>
            <p>
                When property <b>Name</b> is associated with event <b>NameChanged</b>,
                magic doesn't happen automatically,
                the implementation of <b>SetName</b> should trigger <b>NameChanged</b> approppriately.
            </p>
            <p>
                The property could also be readonly, or not associated with an event.
            </p>
            <p>
                Auto-property is very useful to avoid boiler-plate code.
            </p>
            <p>
                Auto-property must be initialized.
            </p>
            <topic>
                <title>Full-featured property</title>
                <p>
                    <program><code><![CDATA[
                        class WithProp
                        {
                            prop Name: string = "" {}
                        }
                    ]]></code></program>
                    which means:
                    <program><code><![CDATA[
                        class WithProp
                        {
                            var name: string = "";

                            event NameChanged();

                            func GetName(): string
                            {
                                return name;
                            }

                            func SetName(value: string): void
                            {
                                if (name != value)
                                {
                                    name = value;
                                    NameChanged();
                                }
                            }

                            prop Name: string {GetName, SetName : NameChanged}
                        }
                    ]]></code></program>
                    Note that <b>name</b> is not accessible if this variable is generated by auto-property.
                </p>
            </topic>
            <topic>
                <title>Readonly property</title>
                <p>
                    <program><code><![CDATA[
                        class WithProp
                        {
                            prop Name: string = "" {const}
                        }
                    ]]></code></program>
                    which means:
                    <program><code><![CDATA[
                        class WithProp
                        {
                            var name: string = "";

                            event NameChanged();

                            func GetName(): string
                            {
                                return name;
                            }

                            func SetName(value: string): void
                            {
                                if (name != value)
                                {
                                    name = value;
                                    NameChanged();
                                }
                            }

                            prop Name: string {GetName : NameChanged}
                        }
                    ]]></code></program>
                    Note that <b>name</b> is not accessible if this variable is generated by auto-property.
                </p>
                <p>
                    Even this property is readonly,
                    but <b>SetName</b> is still generated,
                    because this is the only way to modify the property.
                    <b>SetName</b> becomse <b>protected</b> in generated C++ code,
                    so calling this function outside of this class will result in wrong C++ code.
                </p>
            </topic>
            <topic>
                <title>Without event</title>
                <p>
                    <program><code><![CDATA[
                        class WithProp
                        {
                            prop Name: string = "" {not observe}
                        }
                    ]]></code></program>
                    which means:
                    <program><code><![CDATA[
                        class WithProp
                        {
                            var name: string = "";

                            func GetName(): string
                            {
                                return name;
                            }

                            func SetName(value: string): void
                            {
                                name = value;
                            }

                            prop Name: string {GetName, SetName}
                        }
                    ]]></code></program>
                    Note that <b>name</b> is not accessible if this variable is generated by auto-property.
                </p>
            </topic>
            <topic>
                <title>Readonly property without event</title>
                <p>
                    <program><code><![CDATA[
                        class WithProp
                        {
                            prop Name: string = "" {const, not observe}
                        }
                    ]]></code></program>
                    which means:
                    <program><code><![CDATA[
                        class WithProp
                        {
                            var name: string = "";

                            func GetName(): string
                            {
                                return name;
                            }

                            func SetName(value: string): void
                            {
                                name = value;
                            }

                            prop Name: string {GetName}
                        }
                    ]]></code></program>
                    Note that <b>name</b> is not accessible if this variable is generated by auto-property.
                </p>
                <p>
                    Even this property is readonly,
                    but <b>SetName</b> is still generated,
                    because this is the only way to modify the property.
                    <b>SetName</b> becomes <b>protected</b> in generated C++ code,
                    so calling this function outside of this class will result in wrong C++ code.
                </p>
            </topic>
        </topic>
        <topic>
            <title>Using events</title>
            <p>
                Events in classes behaves exactly the same as <a href="/workflow/lang/interface_prop.html">events in interfaces.</a>
            </p>
        </topic>
    </topic>
</article>